/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.AppStage
import io.swagger.client.model.AuthorizeTenantDto
import io.swagger.client.model.ListResultDtoAppListDto
import io.swagger.client.model.ListResultDtoNameValueDto
import io.swagger.client.model.TenantAppsDto
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object AppApi {

  /**
   * 授权租户App权限
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param createTenantDto 
   */
  def appAddAuthorize(createTenantDto: Option[AuthorizeTenantDto] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://langwenda.com:7000/mock/58", "/app/authorize", "application/json")
      .withBody(createTenantDto)
      .withSuccessResponse[Unit](200)
        /**
   * 
   * Expected answers:
   *   code 200 : TenantAppsDto (Success)
   * 
   * @param tenantId 需要获得App的租户Id
   */
  def appFindByTenant(tenantId: Int): ApiRequest[TenantAppsDto] =
    ApiRequest[TenantAppsDto](ApiMethods.GET, "http://langwenda.com:7000/mock/58", "/app/find-by-tenant/{tenantId}", "application/json")
      .withPathParam("tenantId", tenantId)
      .withSuccessResponse[TenantAppsDto](200)
        /**
   * 
   * Expected answers:
   *   code 200 : ListResultDtoAppListDto (Success)
   */
  def appListAll(): ApiRequest[ListResultDtoAppListDto] =
    ApiRequest[ListResultDtoAppListDto](ApiMethods.GET, "http://langwenda.com:7000/mock/58", "/app/all", "application/json")
      .withSuccessResponse[ListResultDtoAppListDto](200)
        /**
   * 
   * Expected answers:
   *   code 200 : ListResultDtoNameValueDto (Success)
   */
  def appListAllBrief(): ApiRequest[ListResultDtoNameValueDto] =
    ApiRequest[ListResultDtoNameValueDto](ApiMethods.GET, "http://langwenda.com:7000/mock/58", "/app/all-brief", "application/json")
      .withSuccessResponse[ListResultDtoNameValueDto](200)
        /**
   * 
   * Expected answers:
   *   code 200 :  (Success)
   * 
   * @param appId app id
   * @param appStage 
   */
  def appSetStage(appId: Int, appStage: AppStage): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PUT, "http://langwenda.com:7000/mock/58", "/app/{appId}/set-stage", "application/json")
      .withBody(appStage)
      .withPathParam("appId", appId)
      .withSuccessResponse[Unit](200)
        /**
   * 更新租户App权限
   * 
   * Expected answers:
   *   code 200 :  (OK)
   * 
   * @param updateTenantDto 
   */
  def appUpdateAuthorize(updateTenantDto: Option[AuthorizeTenantDto] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.PUT, "http://langwenda.com:7000/mock/58", "/app/authorize", "application/json")
      .withBody(updateTenantDto)
      .withSuccessResponse[Unit](200)
      

}

